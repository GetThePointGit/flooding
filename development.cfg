[buildout]
index = http://packages.lizardsystem.nl
find-links =
unzip = true
prefer-final = true
extends =
    http://packages.lizardsystem.nl/kgs/3.0.11/versions.cfg
    server.cfg
show-picked-versions = true
extensions =
    mr.developer
always-accept-server-certificate = true
auto-checkout =
    gislib
    flooding-lib
parts =
    sysegg
    mkdir
#    geos
#    gdal
    django
    omelette
    console_scripts
    pydev
    pyflakes
    pylint
    symlinks
    ${buildout:serverparts}
develop = .
eggs =
    flooding
    pyparsing

[versions]
# Specific pins
flooding =
Django = 1.6.6
flooding-lib = 4.10

# Reported by buildout
Flask = 0.10.1
Markdown = 2.2.0
Pillow = 2.5.1
PyYAML = 3.11
ansible = 2.0.1.0
astroid = 1.1.1
backports-abc = 0.4
backports.ssl-match-hostname = 3.5.0.1
certifi = 2016.2.28
cns.recipe.symlink = 0.2.3
collective.recipe.supervisor = 0.19
django-appconf = 0.6
django-compressor = 1.4
django-debug-toolbar = 0.9.4
django-excel-response = 1.0
django-extensions = 1.3.8
django-markdown-deux = 1.0.4
django-nose = 1.2
djangorecipe = 1.10
ecdsa = 0.13
factory-boy = 2.4.1
gunicorn = 19.0.0
itsdangerous = 0.24
lizard-worker = 0.12
logilab-common = 0.62.0
markdown2 = 2.2.1
matplotlib = 1.5.1
mock = 0.8.0
mr.developer = 1.34
nens = 1.13
netcdf4 = 1.0.4
nose = 1.3.3
paramiko = 1.16.0
pb.recipes.pydev = 0.4.5
pika = 0.10.0
pycrypto = 2.6.1
pylint = 1.2.1
pyparsing = 1.5.6
pyproj = 1.9.3
python-dateutil = 2.5.2
raven = 6.1.0
setuptools = 18.2
singledispatch = 3.4.0.3
six = 1.7.3
syseggrecipe = 1.2
tornado = 4.3
xlrd = 0.9.3
xlwt = 0.7.5
z3c.recipe.usercrontab = 1.1
zc.buildout = 2.4.3
zc.recipe.egg = 2.0.2


[sources]
flooding-lib = git git@github.com:GetThePointGit/flooding-lib.git
lizard-worker = git git@github.com:lizardsystem/lizard-worker.git
gislib = git git@github.com:nens/gislib.git branch=flooding-branch

[sysegg]
# Add eggs here that are best handled through OS-level packages.
# In my testing so far, Ubuntu 12.04 needs the matplotlib sysegg,
# and 14.04 only works without it!
# 16.04 works only with it (and a newer version - 1.5.1).
recipe = syseggrecipe
force-sysegg = true
eggs =
    numpy
    scipy
    GDAL
    matplotlib

[mkdir]
recipe = z3c.recipe.mkdir
paths =
    ${buildout:directory}/var/static
    ${buildout:directory}/var/media
    ${buildout:directory}/var/log
    ${buildout:directory}/var/sqlite
    ${buildout:directory}/var/external_data
    ${buildout:directory}/var/generated_icons
    ${buildout:directory}/var/gisdata

[django]
# Sets up django for testing our application.
# See http://jacobian.org/writing/django-apps-with-buildout/
recipe = djangorecipe
wsgi = true
wsgilog = ${buildout:directory}/var/log/django.log
project = flooding
projectegg = flooding
settings = developmentsettings
test = flooding
eggs = flooding

[console_scripts]
recipe = zc.recipe.egg
interpreter = python
eggs =
    ${buildout:eggs}
# Development tools
    pep8
    zest.releaser
    coverage
    gunicorn
    ansible

[pyflakes]
# Hairy way to install pyflakes: old-style distutils script.
recipe = zc.recipe.egg
scripts =
   pyflakes
eggs =
   pyflakes
entry-points = pyflakes=pkg_resources:run_script
arguments = 'pyflakes', 'pyflakes'

[omelette]
# Creates a nice parts/omelette with our used eggs
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}

[pydev]
recipe = pb.recipes.pydev
eggs = ${buildout:eggs}
pydevproject_path = ${buildout:directory}/.pydevproject
extra_paths =

[serverconfig]
gunicorn-port = 9200
supervisor-port = 9201
sitename = flooding.lizard.net

[pylint]
recipe = zc.recipe.egg
eggs =
     ${buildout:eggs}
     pylint
entry-points = pylint=pylint.lint:Run
arguments = sys.argv[1:]

[symlinks]
recipe = cns.recipe.symlink
symlink =
    /mnt/flod-share/exportruns/export_runs_csvs = var/export_runs_csvs
    /mnt/flod-share/pyramids = var/pyramids
    /mnt/flod-share/ror_keringen = var/ror_keringen
    /mnt/flod-share/excel = var/excel
    /mnt/flod-share/import = var/media/import
